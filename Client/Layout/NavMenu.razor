@using Shared.Model
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="tours">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> @globals.Localizations["Navbar_Tours"]
            </NavLink>
        </div>
        @if (globals.IsLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="my-bookings">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> @globals.Localizations["Navbar_MyBookings"]
                </NavLink>
            </div>
            if (globals.User!.HasRole(AccountRolesEnum.Modify))
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="localizations">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> @globals.Localizations["Navbar_ChangeLocalization"]
                    </NavLink>
                </div>
            }
            if (globals.User!.HasRole(AccountRolesEnum.Guide))
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="guide-management">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> @globals.Localizations["Navbar_GuideManagement"]
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        globals.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        globals.OnChange -= StateHasChanged;
    }
}
